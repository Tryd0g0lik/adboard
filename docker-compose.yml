services:
  db:
    container_name: postgres
    image: postgres
#    volumes:
#      - postgres_data:/var/lib/postgresql/data
    env_file: ./.env
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    restart: unless-stopped
    healthcheck:
      test: ['CMD-SHELL', '${POSTGRES_USER} -U ${POSTGRES_NAME}']
      interval: 5s
      timeout: 5s
      retries: 5
#    wetworks:
#      - postgres_network
    ports:
      - "5432:5432"
  www:
    container_name: adboard
#    image: adboard
    build:
      dockerfile: Dockerfile
      context: .
    env_file: ./.env
    #volumes:
      #- static_volume:/www/src/weather/project/static
    command:
      - bash
      - -c
      - |
        python3 ./manage.py collectstatic --noinput
        python3 ./manage.py makemigrations
        python3 ./manage.py migrate
        gunicorn -w 4 --bind 0.0.0.0:8000 project.wsgi:application
    #working_dir: /www/src
#    networks:
#      - nginx_network
#      - postgres_network
    volumes:
#       - .:|/www/src
       - volume_static:/www/src/static
#      #- volume_static:/weather/static
#       - nginx_conf:/etc/nginx/conf.d/
    depends_on:
      - db
    ports:
      - "8000:8000"
  nginx:
    container_name: nginx
    #image: weather-nginx
    build:
      context: ./nginx
      dockerfile: Dockerfile
    #working_dir: /var/www/
#    networks:
#      - nginx_network
    depends_on:
      - www
    volumes:
#      - postgres_data:/var/lib/postgresql/data
      - volume_static:/www/src/static
#      - nginx_conf:/etc/nginx/conf.d/
    restart: on-failure
    ports:
      - "80:80"
volumes:
#  postgres_data:
  volume_static:
#  nginx_conf: